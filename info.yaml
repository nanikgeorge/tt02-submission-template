--- 
# TinyTapeout project information
project:
  wokwi_id:    348255968419643987        # If using wokwi, set this to your project's ID
#  source_files:        # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. Source files must be in ./src
#    - counter.v
#    - decoder.v
#  top_module:  "seven_segment_seconds"      # put the name of your top module here, make it unique by prepending your github username

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "Nanik Adnani"      # Your name
  discord:      "nanik"      # Your discord handle
  title:        "Tiny Synth"      # Project title
  description:  "A tiny synthesizer! Modulates the frequency of the clock based on inputs, plays a C scale (hopefully)."      # Short description of what your project does
  how_it_works: "The 6 flipflops are setup as toggle flipflops, storing a value which counts up from zero. The banks of and gates each store a value and compare it to the value stored in the flipflops as they count up. By toggling the input one of the banks of and gates is selected, when the value it is storing is reached by the flipflops, the flipflops are reset. This allows us to set and reset the last flip flop before the output to the frequency of our desired musical note. The additional flip flops on outputs 3 and 4 are there to lower the pitch, each dividing the frequency by two."      # Longer description of how the project works
  how_to_test:  "Make sure the clock is tied to input 0, then you can play different notes by toggling the other inputs."      # Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  external_hw:  "An external speaker and some way to drive it - probably a buffer of some kind on the output."      # Describe any external hardware needed
  language:     "wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  doc_link:     "Not done yet, I would like to build this into a proper keyboard of somekind. Coming soon!"      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     12500       # Clock frequency in Hz (if required)
  picture:      "Not done yet."      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - clock
    - C
    - D
    - E
    - F
    - G
    - A
    - B
  outputs:
    - Pitch +1 Octave         # a description of what the outputs do
    - Pitch
    - Pitch -1 Octave
    - Pitch -2 Octave
    - none
    - none
    - none
    - none

